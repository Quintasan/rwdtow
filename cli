#!/usr/bin/env ruby
require 'thor'
require 'git'
require 'yaml'

class MyCLI < Thor

  SOURCE_DIR = './tmp/source'

  desc "convert", "Convert Jekyll files to Leanpub structure"

  def convert()
    clone_repo
    chapters_list = chapters
    files_list = create_chapters(chapters_list)
    create_book(files_list)
  end

  private

  def clone_repo
    unless Dir.exist?(SOURCE_DIR)
      Git.clone('https://github.com/iJackUA/rwdtow.git', 'source',
        branch: 'gh-pages',
        path: './tmp/',
        depth: 1
      )
    end
  end

  def chapters
    chapters = []
    Dir["#{SOURCE_DIR}/_posts/*.md"].each do |file_path|
      file = { path: file_path }
      content = File.read(file_path)

      front_matter = content.match(/^(?<metadata>---\s*\n.*?\n?)^(---\s*$\n?)/m)
      file[:front_matter] = front_matter

      metadata = YAML.load(front_matter[:metadata])

      file[:title] = metadata['title']
      file[:order] = metadata['order']
      file[:content] = compose_content(content, metadata)

      chapters << file
    end

    chapters.sort { |x, y| x[:order] <=> y[:order] }
  end

  def create_chapters(chapters)
    chapter_file_names = []
    chapters.each_with_index do |ch, index|
      chapter_file_name = "ch#{index+1}.txt"
      chapter_file_names << chapter_file_name
      file = File.new("./manuscript/#{chapter_file_name}", "w+")
      file.write(ch[:content])
    end
    chapter_file_names
  end

  def create_book(chapter_file_names)
    books_content = chapter_file_names.join("\n")
    books_file = File.new("./manuscript/Book.txt", "w+")
    books_file.write(books_content)
  end

  def compose_content(content, metadata)
    stripped_content = content.gsub(/\A[-]{3}.*[-]{3}/m, '').strip
    "# #{metadata['title']}\n\n#{stripped_content}"
  end

end

MyCLI.start(ARGV)
